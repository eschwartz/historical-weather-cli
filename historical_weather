#!/usr/bin/env python3
import os
import sys
import csv
import json
import argparse
import glob

from commands.days_of_precip import register_argparser as register_days_of_precip
from commands.max_temp_delta import register_argparser as register_max_temp_delta
from utils import cities_by_shorthand
from exceptions import CliUserError

# Setup top-level parser
parser = argparse.ArgumentParser(
    description="""
        CLI tool to aggregate climate data from 
        NOAA historical weather records.

        Weather data is expected as a CSV export from
        https://www.ncdc.noaa.gov/cdo-web/search
    """
)

# Allow overriding the default CSV file
parser.add_argument(
    '-f', '--file',
    default='noaa_historical_weather_10yr.csv',
    help="Location of NOAA CSV file export. Defaults to %(default)s"
)
# Setup subcommands parser
subparsers = parser.add_subparsers(
    title="Subcommands",
    help="Run command with -h for full help text"
)

# Register the individual command parser
# TODO: could probably auto-load commands from all *.py files
# in the the /commands directory
register_days_of_precip(subparsers)
register_max_temp_delta(subparsers)

# Parse the arguments into a Namespace object (dict-like)
args = parser.parse_args()

try:
    # Open the CSV file for reading
    with open(args.file, 'r') as csv_file:
        # Create reader iterable, to parse the CSV by row
        csv_records = csv.DictReader(csv_file); 

        # Create a copy of the CLI args to pass to the command fn
        command_args = argparse.Namespace(**vars(args))
        # Remove the file and run_command attributes
        # as these are just used for this initial setup
        del command_args.file
        del command_args.run_command

        # Pass the CSV iterable and the parse cli args (as kwargs)
        res = args.run_command(csv_records, **vars(command_args))
    
    print(json.dumps(res, indent=2));
except CliUserError as err:
    # For user errors, print the message and exit
    print(err, file=sys.stderr)
    sys.exit(1)