#!/usr/bin/env python3
import os
import sys
import csv
import json
import argparse
import glob

from commands.days_of_precip import register_argparser as register_days_of_precip
from commands.max_temp_delta import register_argparser as register_max_temp_delta
from utils import cities_by_shorthand
from exceptions import CliUserError

cli_help = f"""
CLI tool to aggregate climate data from 
NOAA historical weather records.

Weather data is expected as a CSV export from
https://www.ncdc.noaa.gov/cdo-web/search

Usage:
    ./historical_weather <function-name> [options]

Functions:


    max-temp-delta [options]

        Determine the greatest single day low to high temperature
        change for the designated city and time period (all time, 
        yearly, monthly).

        Options
            --city              Which city to evaluate
                                eg. bos, jnu, mia

            --year              (Optional)
                                Restrict search to a single year
                                Format: YYYY, eg. 2018
            
            --month             (Optional)
                                Restrict search to a particular month
                                Requires --year
                                Format: integer, 1-12
        
        Output (JSON)
            city                City being evaluated
            date                Date with largest temp delta
            temp_change         Temperature delta
"""



# See subparsers doc
# especially section on using set_default()
# to call different methods for each argument value
# https://docs.python.org/3.3/library/argparse.html#sub-commands
#
# Setup top-level parse
parser = argparse.ArgumentParser()
parser.add_argument(
    '-f', '--file',
    default='noaa_historical_weather_10yr.csv',
)
subparsers = parser.add_subparsers(
    title="Subcommands",
    help="Run command with -h for full help text"
)

# TODO: could probably auto-load commands from all *.py files
# in the the /commands directory
register_days_of_precip(subparsers)
register_max_temp_delta(subparsers)

# Parse the arguments into a Namespace object (dict-like)
args = parser.parse_args()

try:
    with open(args.file, 'r') as csv_file:
        csv_records = csv.DictReader(csv_file); 

        # Pass the CSV iterable and the parse cli args (as kwargs)
        command_args = argparse.Namespace(**vars(args))
        del command_args.file
        del command_args.run_command
        res = args.run_command(csv_records, **vars(command_args))
    
    print(json.dumps(res, indent=2));
except CliUserError as err:
    # For user errors, print the message and exit
    print(err, file=sys.stderr)
    sys.exit(1)